sudo: false
dist: trusty
language: cpp

cache:
  apt: true

addons:
  apt:
    sources: ['ubuntu-toolchain-r-test','llvm-toolchain-trusty-5.0']
    packages: ['ninja-build','g++-7','clang-5.0','libpcap-dev','libjson-c-dev','valgrind','lcov','gcovr','texlive-latex-base']

env:
  global:
    - GTEST_DIR="$TRAVIS_BUILD_DIR/third_party/googletest"

matrix:
  fast_finish: true
  include:
    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - CXXFLAGS="-g -O0 -fprofile-arcs -ftest-coverage -fPIC" CFLAGS="-g -O0 -fprofile-arcs -ftest-coverage" gcov="/usr/bin/gcov-7"     
    - os: linux
      compiler: clang
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

before_install:
  - git submodule update --init --recursive
  - eval "${MATRIX_EVAL}"

install:
  - pip install --user --upgrade cpp-coveralls
  - gem install coveralls-lcov

before_script:
  - lcov --gcov-tool "/usr/bin/gcov-7" --directory . --zerocounters
script:
  - |
    ctest --build-and-test . ./build --build-config debug --build-generator 'Ninja' --parallel 4 --build-target all \
          --build-options -DGTEST_SOURCE_DIR=$GTEST_DIR -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DINCLUDE_COVERAGE_INFO="true" \
          --test-command ctest
  - cmake --build ./build --target documentation-pdflatex

after_success: 
  - |
    if [[ "$CXX" == "g++"* ]]; then
      lcov --gcov-tool "/usr/bin/gcov-7" --compat-libtool --directory . --capture --output-file coverage.info # capture coverage info
      lcov --gcov-tool "/usr/bin/gcov-7" --remove coverage.info 'tests/*' '/usr/*' '*gmock*' --output-file coverage.info # filter out system and test code
      coveralls-lcov coverage.info
    fi
